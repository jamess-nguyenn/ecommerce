services:
    golang:
        build:
            context: ./docker/golang
            dockerfile: Dockerfile
        container_name: golang-app
        volumes:
            - .:/var/www/go/ecommerce
            - ./docker/logs/delve:/var/log/delve
        working_dir: /var/www/go/ecommerce
        ports:
            - "8080:8080"  # Expose HTTP server port
            - "2345:2345"  # Expose Delve debugger port
        depends_on:
            - mysql
            - mongodb
            - redis
        networks:
            - backend

    mysql:
        image: mysql:8.0
        container_name: mysql-db
        env_file:
            - ./docker/mysql/.env  # Load variables from the docker/mysql/.env file
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - backend

    mongodb:
        image: mongo:latest
        container_name: mongo-db
        volumes:
            - mongo-data:/data/db
        ports:
            - "27017:27017"
        networks:
            - backend

    nginx:
        image: nginx:latest
        container_name: nginx-server
        volumes:
            - ./docker/nginx/ecommerce.conf:/etc/nginx/conf.d/default.conf
            - ./docker/logs/nginx:/var/log/nginx
        ports:
            - "80:80"
        depends_on:
            - golang
        networks:
            - backend

    redis:
        image: redis:latest
        container_name: redis-cache
        ports:
            - "6379:6379"
        networks:
            - backend

networks:
    backend:

volumes:
    mysql-data:
    mongo-data: